---
layout:     post
title:      "PHP基础语法"
subtitle:   " \"PHP基础语法学习记录\""
date:       2016-04-28 15:00:00
author:     "Wenlh"
header-img: "img/myson.jpg"
catalog: true
tags:
    - PHP
    - PHP基础
---

## PHP基本语法学习记录  

### [语法](http://www.w3school.com.cn/php/php_syntax.asp) 

1.PHP脚本以 <?php 开头，以 ?> 结尾 

```php
    <?php
      // 此处是 PHP 代码
    ?>
```
2.PHP文件的默认文件扩展名是 ".php" 

3.PHP文件通常包含 HTML 标签以及一些 PHP 脚本代码 

```php
    <!DOCTYPE html>
    <html>
        <body>
            <h1>我的第一张 PHP 页面</h1>
            <?php
                 echo "Hello World!";
            ?>
        </body>
    </html>
```

4.PHP语句以分号结尾 

5.PHP中函数、类和关键词大小写不敏感, 变量大小写敏感 

6.PHP中的注释 

```php
    <?php
        $a = '我不是注释';
      // 这是单行注释
      # 这也是单行注释
     /*
        这是多行注释块
        这是多行注释块
        这是多行注释块
     */
    ?>
```

### [变量](http://www.w3school.com.cn/php/php_variables.asp) 

1.变量规则: 

* 变量以 $ 符号开头，其后是变量的名称  
* 变量名称必须以字母或下划线开头  
* 变量名称不能以数字开头  
* 变量名称只能包含字母数字字符和下划线（A-z、0-9 以及 _）  
* 变量名称对大小写敏感（$y 与 $Y 是两个不同的变量）  

2.PHP 有三种不同的变量作用域： 

* local（局部） 函数中定义的变量,只能在函数内访问  
* global（全局）函数外定义的变量,只能在函数外访问  
* static（静态）函数执行完成后不会删除,与类变量相似      

```php
    <?php
        $a = 'a';           //全局变量
        function my_test(){
            $b = 'b';       //局部变量
            static $c = 0;  //静态变量
            $c++;
            echo $c;
        }
        my_test();          //显示'1'
        my_test();          //显示'2'
        my_test();          //显示'3'
    ?>
```

1.PHP 通过global关键字实现变量在函数内外互相访问(或使用$GLOBALS['x']形式在函数内访问global的变量) 

```php
    <?php
        $a = 5;
        function my_test(){
            //echo $a       //不能显示
            global $a;
            echo $a;        //输出5
            global $b;
            $b = $a + 10;
            $c = $b;
        }
        my_test();
        echo $b;            //输出15
        //echo $c;            //不能输出
    ?>
```

### [输出](http://www.w3school.com.cn/php/php_echo_print.asp)  
echo 和 print 之间的差异：

* echo - 能够输出一个以上的字符串 
* print - 只能输出一个字符串，并始终返回 1 
* echo 比 print 稍快，因为它不返回任何值 
  
```php
	<?php
		$txt1="Learn PHP";
		$txt2="W3School.com.cn";
		$cars=array("Volvo","BMW","SAAB");

		echo $txt1;
		echo "<br>";
		echo "Study PHP at $txt2";
		echo "My car is a {$cars[0]}";
	?>
```

### [数据类型](http://www.w3school.com.cn/php/php_datatypes.asp)  

1. PHP 字符串 
2. PHP 整数 
1. PHP 浮点数 
4. PHP 逻辑 
5. PHP 数组 
6. PHP 对象 
7. PHP NULL 值 

```php
    <?php
        $x = 5985;
        var_dump($x);       //int(5985)
        $x = -345;          //int(-345)
        var_dump($x);
        echo "<br>"; 
        $x = 0x8C;          // 十六进制数
        var_dump($x);       //int(140)
        echo "<br>";
        $x = 047;           // 八进制数
        var_dump($x);       //int(39)
        
        $x = 10.365;
        var_dump($x);       //float(10.365)
        echo "<br>"; 
        $x = 2.4e3;
        var_dump($x);       //float(2400)
        echo "<br>"; 
        
        $x=true;
        $y=false;
        var_dump($x);       //bool(true)
        echo "<br>"; 
        var_dump($y);       //bool(false)
        
        $cars=array("Volvo","BMW","SAAB");
        var_dump($cars);    
        /*
        array(3) {
            [0]=>
            string(5) "Volvo"
            [1]=>
            string(3) "BMW"
            [2]=>
            string(4) "SAAB"
        }
        */
        class Car
            {
                var $color;
                function Car($color="green") {
                    $this->color = $color;
                }
                function what_color() {
                    return $this->color;
                }
            }
            
        $cars = new car;
        var_dump($cars);
        /*
        object(Car)#1 (1) {
            ["color"]=>
            string(5) "green"
        }
        */
        
        
        $x=null;
        var_dump($x);       //NULL
    ?>
```

### [字符串函数](http://www.w3school.com.cn/php/php_ref_string.asp)  

* [strlen()](http://www.w3school.com.cn/php/func_string_strlen.asp) 	获取字符串长度
* [chop()]((http://www.w3school.com.cn/php/func_string_chop.asp))			从字符串右端移除字符,chop(string,charlist),默认移除全部空白字符
* [chunk_split()](http://www.w3school.com.cn/php/func_string_chunk_split.asp)	分割字符串chunk_split(string,length,end),按长度分割,并在结尾拼接字符串,length及end可选	
* [explode()](http://www.w3school.com.cn/php/func_string_explode.asp)	把字符串打散为数组explode(separator,string,limit),例:(explode(" ",$str),limit可选	
* [implode()](http://www.w3school.com.cn/php/func_string_implode.asp)	函数返回由数组元素组合成的字符串。implode(separator,array),例:implode(" ",$arr)
* [join()](http://www.w3school.com.cn/php/func_string_join.asp)	函数是 implode() 函数的别名
* [fprintf()](http://www.w3school.com.cn/php/func_string_fprintf.asp)		函数把格式化的字符串写入指定的输出流（例如：文件或数据库）
* [lcfirst()](http://www.w3school.com.cn/php/func_string_lcfirst.asp)		函数把字符串中的首字符转换为小写
* [strtolower()](http://www.w3school.com.cn/php/func_string_strtolower.asp)	把所有字符转换为小写	
* [strtoupper()](http://www.w3school.com.cn/php/func_string_strtoupper.asp)	把所有字符转换为大写
* [ucfirst()](http://www.w3school.com.cn/php/func_string_ucfirst.asp)		函数把字符串中的首字符转换为大写
* [ucwords()](http://www.w3school.com.cn/php/func_string_ucwords.asp)		函数把字符串中每个单词的首字符转换为大写
* [ltrim()](http://www.w3school.com.cn/php/func_string_ltrim.asp)		函数移除字符串左侧的空白字符或其他预定义字符
* [rtrim()](http://www.w3school.com.cn/php/func_string_rtrim.asp)		函数移除字符串右侧的空白字符或其他预定义字符
* [trim()](http://www.w3school.com.cn/php/func_string_trim.asp)		函数移除字符串两侧的空白字符或其他预定义字符
* [nl2br()](http://www.w3school.com.cn/php/func_string_nl2br.asp)	函数在字符串中的每个新行（\n）之前插入 HTML 换行符（br）。	
* [number_format()](http://www.w3school.com.cn/php/func_string_number_format.asp)		函数通过千位分组来格式化数字
* [parse_str()](http://www.w3school.com.cn/php/func_string_parse_str.asp)	把查询字符串解析到变量中parse_str(string,array)如果未设置 array 参数，则由该函数设置的变量将覆盖已存在的同名变量	
* [str_pad()](http://www.w3school.com.cn/php/func_string_str_pad.asp)	函数把字符串填充为新的长度str_pad(string,length,pad_string,pad_type)	
* [str_repeat()](http://www.w3school.com.cn/php/func_string_str_repeat.asp)		函数把字符串重复指定的次数
* [str_replace()](http://www.w3school.com.cn/php/func_string_str_replace.asp)		函数以其他字符替换字符串中的一些字符（区分大小写）str_replace(find,replace,string,count)
* [str_ireplace()](http://www.w3school.com.cn/php/func_string_str_ireplace.asp)		函数替换字符串中的一些字符（不区分大小写）str_replace(find,replace,string,count)
* [str_split()](http://www.w3school.com.cn/php/func_string_str_split.asp)	函数把字符串分割到数组中。str_split(string,length)
* [str_word_count()](http://www.w3school.com.cn/php/func_string_str_word_count.asp)	函数计算字符串中的单词数
* [strip_tags()](http://www.w3school.com.cn/php/func_string_strip_tags.asp)	函数剥去字符串中的 HTML、XML 以及 PHP 的标签.strip_tags(string,allow)
* [stripos()](http://www.w3school.com.cn/php/func_string_stripos.asp)	 函数查找字符串在另一字符串中第一次出现的位置(不区分大小写)
* [strpos()](http://www.w3school.com.cn/php/func_string_strpos.asp)	函数查找字符串在另一字符串中第一次出现的位置(区分大小写)
* [strripos()](http://www.w3school.com.cn/php/func_string_strripos.asp)	函数查找字符串在另一字符串中最后一次出现的位置(不区分大小写)
* [strrpos()](http://www.w3school.com.cn/php/func_string_strrpos.asp)	函数查找字符串在另一字符串中最后一次出现的位置(区分大小写)
* [strnatcmp()](http://www.w3school.com.cn/php/func_string_strnatcmp.asp)	使用"自然"算法来比较两个字符串（区分大小写）(1,2,10,11,22)
* [strnatcasecmp()](http://www.w3school.com.cn/php/func_string_strnatcasecmp.asp)	使用"自然"算法来比较两个字符串（不区分大小写）(1,2,10,11,22)
* [strcasecmp()](http://www.w3school.com.cn/php/func_string_strcasecmp.asp)	函数比较两个字符串(大小写不敏感)(1,10,11,2,22)
* [strcmp()](http://www.w3school.com.cn/php/func_string_strcmp.asp)	函数比较两个字符串(大小写敏感)(1,10,11,2,22)
* [strrev()](http://www.w3school.com.cn/php/func_string_strrev.asp)	函数反转字符串
* [substr()](http://www.w3school.com.cn/php/func_string_substr.asp)	函数返回字符串的一部分,substr(string,start,length)
* [substr_count()](http://www.w3school.com.cn/php/func_string_substr_count.asp)	函数计算子串在字符串中出现的次数
* [substr_replace()](http://www.w3school.com.cn/php/func_string_substr_replace.asp)	函数把字符串的一部分替换为另一个字符串


### [常量](http://www.w3school.com.cn/php/php_constants.asp)  

1. 常量是单个值的标识符（名称）。在脚本中无法改变该值。
2. 有效的常量名以字符或下划线开头（常量名称前面没有 $ 符号）。
3. 注释：与变量不同，常量贯穿整个脚本是自动全局的。
4. 如需设置常量，请使用 define() 函数,三个参数,常量名、常量值、是否大小写敏感(默认false,大小写敏感) 

```php
	<?php
		define("GREETING", "Welcome to W3School.com.cn!");
		echo GREETING;
	?>
```

### [运算符](http://www.w3school.com.cn/php/php_operators.asp)  

##### 算数运算符

运算符|	名称|	例子|	结果
----|----|----|----
+|	加法|	$x + $y|	$x 与 $y 求和
-|	减法|	$x - $y|	$x 与 $y 的差数
*|	乘法|	$x * $y|	$x 与 $y 的乘积
/|	除法|	$x / $y|	$x 与 $y 的商数
%|	模数|	$x % $y|	$x 除 $y 的余数

##### 赋值运算符

赋值|	等同于|	描述
----|----|----
x = y|	x = y|	右侧表达式为左侧运算数设置值
x += y|	x = x + y|	加
x -= y|	x = x - y|	减
x *= y|	x = x * y|	乘
x /= y|	x = x / y|	除
x %= y|	x = x % y|	模数

##### 字符串运算符

运算符|	名称|	例子|	结果
----|----|----|----
.|	串接|	$txt1 = "Hello" $txt2 = $txt1 . " world!"|	现在 $txt2 包含 "Hello world!"
.=|	串接赋值|	$txt1 = "Hello" $txt1 .= " world!"|	现在 $txt1 包含 "Hello world!"

##### 递增/递减运算符

运算符|	名称|	描述
----|----|----
++$x|	前递增|	$x 加一递增，然后返回 $x
$x++|	后递增|	返回 $x，然后 $x 加一递增
--$x|	前递减|	$x 减一递减，然后返回 $x
$x--|	后递减|	返回 $x，然后 $x 减一递减

##### 比较运算符

运算符|	名称|	例子|	结果
----|----|----|----
==	|等于|	$x == $y|	如果 $x 等于 $y，则返回 true。
===	|全等|（完全相同）	$x === $y|	如果 $x 等于 $y，且它们类型相同，则返回 true。
!=	|不等于|	$x != $y|	如果 $x 不等于 $y，则返回 true。
<>	|不等于|	$x <> $y|	如果 $x 不等于 $y，则返回 true。
!==	|不全等（完全不同）|	$x !== $y|	如果 $x 不等于 $y，且它们类型不相同，则返回 true。
>	|大于|	$x > $y|	如果 $x 大于 $y，则返回 true。
<	|大于|	$x < $y|	如果 $x 小于 $y，则返回 true。
>=	|大于或等于|	$x >= $y|	如果 $x 大于或者等于 $y，则返回 true.
<=	|小于或等于|	$x <= $y|	如果 $x 小于或者等于 $y，则返回 true。

##### 逻辑运算符

运算符|	名称|	例子|	结果
----|----|----|----
and|	与|	$x and $y|	如果 $x 和 $y 都为 true，则返回 true。
or|	或|	$x or $y|	如果 $x 和 $y 至少有一个为 true，则返回 true。
xor|	异或|	$x xor $y|	如果 $x 和 $y 有且仅有一个为 true，则返回 true。
&&|	与|	$x && $y|	如果 $x 和 $y 都为 true，则返回 true。
\\|\||	或|	$x \|\| $y|	如果 $x 和 $y 至少有一个为 true，则返回 true。
!|	非|	!$x|	如果 $x 不为 true，则返回 true。

##### 数组运算符

运算符|	名称|	例子|	结果
----|----|----|----
+|	联合|	$x + $y|	$x 和 $y 的联合（但不覆盖重复的键）
==|	相等|	$x == $y|	如果 $x 和 $y 拥有相同的键/值对，则返回 true。
===|	全等|	$x === $y|	如果 $x 和 $y 拥有相同的键/值对，且顺序相同类型相同，则返回 true。
!=|	不相等|	$x != $y|	如果 $x 不等于 $y，则返回 true。
<>|	不相等|	$x <> $y|	如果 $x 不等于 $y，则返回 true。
!==|	不全等|	$x !== $y|	如果 $x 与 $y 完全不同，则返回 true。

### [条件语句]()  

#### [IF...ELSE...](http://www.w3school.com.cn/php/php_if_else.asp)

```php
	<?php
		$t='5';
	
		if ($t<"10") {
	   echo "Have a good morning!";
		} elseif ($t<"20") {
	   echo "Have a good day!";
		} else {
	   echo "Have a good night!";
		}
	?>
```

#### [Switch](http://www.w3school.com.cn/php/php_switch.asp)

* 对表达式（通常是变量）进行一次计算
* 把表达式的值与结构中 case 的值进行比较
* 如果存在匹配，则执行与 case 关联的代码
* 代码执行后，break 语句阻止代码跳入下一个 case 中继续执行,否则继续判断
* 如果没有 case 为真，则使用 default 语句

```php
	<?php
		switch ($x)
		{
			case 1: 
		  	echo "Number 1"; 
		  	break; 
			case 2: 
		  	echo "Number 2"; 
		  	break; 
			case 3: 
		  	echo "Number 3"; 
		  	break; 
			default: 
		  	echo "No number between 1 and 3"; 
		}
	?>
```

### [循环语句]()  

#### [while、 do...while](http://www.w3school.com.cn/php/php_looping.asp)

- 使用break来跳出循环.
- 使用continue来跳过后续代码

```php
	<?php 
		$x=1; 

		while($x<=5) {
  		echo "这个数字是：$x <br>";
  		$x++;
		} 
		
		do {
	  	echo "这个数字是：$x <br>";
	  	$x++;
		} while ($x<=5);
	?>
```

#### [for、 foreach](http://www.w3school.com.cn/php/php_looping_for.asp)

```php
	<?php 
		for ($x=0; $x<=10; $x++) {
		  echo "数字是：$x <br>";
		} 
		
		$colors = array("red","green","blue","yellow"); 
	
		foreach ($colors as $value) {
		  echo "$value <br>";
		}
	?>
```

### [数组](http://www.w3school.com.cn/php/php_arrays.asp)  

* 索引数组 - 带有数字索引的数组
* 关联数组 - 带有指定键的数组（HASH）
* 多维数组 - 包含一个或多个数组的数组

```php
<?php
	$cars=array("Volvo","BMW","SAAB");
	$arrlength=count($cars);
	
	for($x=0;$x<$arrlength;$x++) {
	  echo $cars[$x];
	  echo "<br>";
	}
	
	$age=array("Bill"=>"35","Steve"=>"37","Peter"=>"43");

	foreach($age as $x=>$x_value) {
	  echo "Key=" . $x . ", Value=" . $x_value;
	  echo "<br>";
	}
?>
```

### [数组排序](http://www.w3school.com.cn/php/php_arrays_sort.asp)

* sort() - 以升序对数组排序
* rsort() - 以降序对数组排序
* asort() - 根据值，以升序对关联数组进行排序
* ksort() - 根据键，以升序对关联数组进行排序
* arsort() - 根据值，以降序对关联数组进行排序
* krsort() - 根据键，以降序对关联数组进行排序


### [超全局](http://www.w3school.com.cn/php/php_superglobals.asp)

* $GLOBALS
* $_SERVER
* $_REQUEST
* $_POST
* $_GET
* $_FILES
* $_ENV
* $_COOKIE
* $_SESSION


### [函数](http://www.w3school.com.cn/php/php_functions.asp)

用户定义的函数声明以关单 "function" 开头
函数名能够以字母或下划线开头（而非数字）
函数名对大小写不敏感
页面加载时函数不会立即执行,函数只有在被调用时才会执行

```php
<?php
	function setAge($name,$age=30) {
	  echo "The name is : $name, the age is $age <br>";
	}
	
	setAge('wenlh',25);		//The name is : wenlh, the age is 25
	//setHeight(); 						//报错
	setAge('wenlh');				//The name is : wenlh, the age is 30
	
	$a = 'setAge';
	$a('wenlh',60);				//另一种调用方法:wenlh, the age is 60
?>
```

—— Wenlh
